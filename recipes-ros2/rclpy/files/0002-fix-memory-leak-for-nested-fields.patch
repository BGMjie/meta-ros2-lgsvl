diff --git a/src/rclpy/_rclpy.c b/src/rclpy/_rclpy.c
index c87f86a..347ddec 100644
--- a/src/rclpy/_rclpy.c
+++ b/src/rclpy/_rclpy.c
@@ -44,6 +44,63 @@ static void catch_function(int signo)
   }
 }
 
+typedef void * create_ros_message_signature(void);
+typedef void destroy_ros_message_signature(void *);
+typedef bool convert_from_py_signature(PyObject *, void *);
+typedef PyObject * convert_to_py_signature(void *);
+
+static create_ros_message_signature * get_create_ros_message(PyObject* pymetaclass) {
+  PyObject * pycreate_ros_message = PyObject_GetAttrString(pymetaclass, "_CREATE_ROS_MESSAGE");
+  if (!pycreate_ros_message) {
+    return NULL;
+  }
+
+  create_ros_message_signature * create_ros_message =
+    (create_ros_message_signature *)PyCapsule_GetPointer(pycreate_ros_message, NULL);
+
+  Py_DECREF(pycreate_ros_message);
+  return create_ros_message;
+}
+
+static destroy_ros_message_signature * get_destroy_ros_message(PyObject* pymetaclass) {
+  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
+  if (!pydestroy_ros_message) {
+    return NULL;
+  }
+
+  destroy_ros_message_signature * destroy_ros_message =
+    (destroy_ros_message_signature *)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
+
+  Py_DECREF(pydestroy_ros_message);
+  return destroy_ros_message;
+}
+
+static convert_from_py_signature * get_convert_from_py(PyObject* pymetaclass) {
+  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
+  if (!pyconvert_from_py) {
+    return NULL;
+  }
+
+  convert_from_py_signature * convert_from_py =
+    (convert_from_py_signature *)PyCapsule_GetPointer(pyconvert_from_py, NULL);
+
+  Py_DECREF(pyconvert_from_py);
+  return convert_from_py;
+}
+
+static convert_to_py_signature * get_convert_to_py(PyObject* pymetaclass) {
+  PyObject * pyconvert_to_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_TO_PY");
+  if (!pyconvert_to_py) {
+    return NULL;
+  }
+
+  convert_to_py_signature * convert_to_py =
+      (convert_to_py_signature *)PyCapsule_GetPointer(pyconvert_to_py, NULL);
+
+  Py_DECREF(pyconvert_to_py);
+  return convert_to_py;
+}
+
 /// Create a sigint guard condition
 /**
  * A successful call will return a list with two elements:
@@ -737,28 +794,30 @@ rclpy_publish(PyObject * Py_UNUSED(self), PyObject * args)
   PyObject * pymsg_type = PyObject_GetAttrString(pymsg, "__class__");
 
   PyObject * pymetaclass = PyObject_GetAttrString(pymsg_type, "__class__");
+  Py_DECREF(pymsg_type);
 
-  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
+  create_ros_message_signature * create_ros_message = get_create_ros_message(pymetaclass);
+  assert(create_ros_message != NULL &&
+    "unable to retrieve create_ros_message function, type_support mustn't have been imported");
 
-  typedef void * (* convert_from_py_signature)(PyObject *);
-  convert_from_py_signature convert_from_py =
-    (convert_from_py_signature)PyCapsule_GetPointer(pyconvert_from_py, NULL);
+  destroy_ros_message_signature * destroy_ros_message = get_destroy_ros_message(pymetaclass);
+  assert(destroy_ros_message != NULL &&
+    "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
 
+  convert_from_py_signature * convert_from_py = get_convert_from_py(pymetaclass);
   assert(convert_from_py != NULL &&
     "unable to retrieve convert_from_py function, type_support mustn't have been imported");
 
-  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
-
-  typedef void * (* destroy_ros_message_signature)(void *);
-  destroy_ros_message_signature destroy_ros_message =
-    (destroy_ros_message_signature)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
-
-  assert(destroy_ros_message != NULL &&
-    "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
+  Py_DECREF(pymetaclass);
 
-  void * raw_ros_message = convert_from_py(pymsg);
+  void * raw_ros_message = create_ros_message();
   if (!raw_ros_message) {
+    return PyErr_NoMemory();
+  }
+
+  if (!convert_from_py(pymsg, raw_ros_message)) {
     // the function has set the Python error
+    destroy_ros_message(raw_ros_message);
     return NULL;
   }
 
@@ -1323,30 +1382,31 @@ rclpy_send_request(PyObject * Py_UNUSED(self), PyObject * args)
   PyObject * pymetaclass = PyObject_GetAttrString(pyrequest_type, "__class__");
   assert(pymetaclass != NULL);
 
-  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
-  assert(pyconvert_from_py != NULL);
+  create_ros_message_signature * create_ros_message = get_create_ros_message(pymetaclass);
+  assert(create_ros_message != NULL &&
+    "unable to retrieve create_ros_message function, type_support mustn't have been imported");
 
-  typedef void * (* convert_from_py_signature)(PyObject *);
-  convert_from_py_signature convert_from_py =
-    (convert_from_py_signature)PyCapsule_GetPointer(pyconvert_from_py, NULL);
+  destroy_ros_message_signature * destroy_ros_message = get_destroy_ros_message(pymetaclass);
+  assert(destroy_ros_message != NULL &&
+    "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
 
+  convert_from_py_signature * convert_from_py = get_convert_from_py(pymetaclass);
   assert(convert_from_py != NULL &&
     "unable to retrieve convert_from_py function, type_support mustn't have been imported");
 
-  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
-
-  typedef void * (* destroy_ros_message_signature)(void *);
-  destroy_ros_message_signature destroy_ros_message =
-    (destroy_ros_message_signature)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
-
-  assert(destroy_ros_message != NULL &&
-    "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
+  Py_DECREF(pymetaclass);
 
-  void * raw_ros_request = convert_from_py(pyrequest);
+  void * raw_ros_request = create_ros_message();
   if (!raw_ros_request) {
+    return PyErr_NoMemory();
+  }
+
+  if (!convert_from_py(pyrequest, raw_ros_request)) {
     // the function has set the Python error
+    destroy_ros_message(raw_ros_request);
     return NULL;
   }
+
   int64_t sequence_number;
   rcl_ret_t ret = rcl_send_request(client, raw_ros_request, &sequence_number);
   destroy_ros_message(raw_ros_request);
@@ -1483,28 +1543,30 @@ rclpy_send_response(PyObject * Py_UNUSED(self), PyObject * args)
   PyObject * pymetaclass = PyObject_GetAttrString(pyresponse_type, "__class__");
   assert(pymetaclass != NULL);
 
-  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
+  Py_DECREF(pyresponse_type);
+
+  create_ros_message_signature * create_ros_message = get_create_ros_message(pymetaclass);
+  assert(create_ros_message != NULL &&
+    "unable to retrieve create_ros_message function, type_support mustn't have been imported");
 
-  assert(pyconvert_from_py != NULL);
-  typedef void * (* convert_from_py_signature)(PyObject *);
-  convert_from_py_signature convert_from_py =
-    (convert_from_py_signature)PyCapsule_GetPointer(pyconvert_from_py, NULL);
+  destroy_ros_message_signature * destroy_ros_message = get_destroy_ros_message(pymetaclass);
+  assert(destroy_ros_message != NULL &&
+    "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
 
+  convert_from_py_signature * convert_from_py = get_convert_from_py(pymetaclass);
   assert(convert_from_py != NULL &&
     "unable to retrieve convert_from_py function, type_support mustn't have been imported");
 
-  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
-
-  typedef void * (* destroy_ros_message_signature)(void *);
-  destroy_ros_message_signature destroy_ros_message =
-    (destroy_ros_message_signature)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
-
-  assert(destroy_ros_message != NULL &&
-    "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
+  Py_DECREF(pymetaclass);
 
-  void * raw_ros_response = convert_from_py(pyresponse);
+  void * raw_ros_response = create_ros_message();
   if (!raw_ros_response) {
+    return PyErr_NoMemory();
+  }
+
+  if (!convert_from_py(pyresponse, raw_ros_response)) {
     // the function has set the Python error
+    destroy_ros_message(raw_ros_response);
     return NULL;
   }
 
@@ -1992,6 +2054,7 @@ rclpy_wait(PyObject * Py_UNUSED(self), PyObject * args)
   previous_handler = signal(SIGINT, catch_function);
   rcl_wait_set_t * wait_set = (rcl_wait_set_t *)PyCapsule_GetPointer(pywait_set, "rcl_wait_set_t");
   if (!wait_set) {
+    signal(SIGINT, previous_handler);
     return NULL;
   }
   rcl_ret_t ret;
@@ -2035,50 +2098,37 @@ rclpy_take(PyObject * Py_UNUSED(self), PyObject * args)
 
   PyObject * pymetaclass = PyObject_GetAttrString(pymsg_type, "__class__");
 
-  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
-
-  typedef void *(* convert_from_py_signature)(PyObject *);
-  convert_from_py_signature convert_from_py =
-    (convert_from_py_signature)PyCapsule_GetPointer(pyconvert_from_py, NULL);
-  PyObject * pymsg = PyObject_CallObject(pymsg_type, NULL);
-
-  assert(convert_from_py != NULL);
-
-  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
-
-  typedef void * (* destroy_ros_message_signature)(void *);
-  destroy_ros_message_signature destroy_ros_message =
-    (destroy_ros_message_signature)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
+  create_ros_message_signature * create_ros_message = get_create_ros_message(pymetaclass);
+  assert(create_ros_message != NULL &&
+    "unable to retrieve create_ros_message function, type_support mustn't have been imported");
 
+  destroy_ros_message_signature * destroy_ros_message = get_destroy_ros_message(pymetaclass);
   assert(destroy_ros_message != NULL &&
     "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
 
-  void * taken_msg = convert_from_py(pymsg);
-  Py_DECREF(pymsg);
-  if (!taken_msg) {
-    // the function has set the Python error
-    return NULL;
+  void * msg = create_ros_message();
+  if (!msg) {
+    Py_DECREF(pymetaclass);
+    return PyErr_NoMemory();
   }
 
-  rcl_ret_t ret = rcl_take(subscription, taken_msg, NULL);
+  rcl_ret_t ret = rcl_take(subscription, msg, NULL);
 
   if (ret != RCL_RET_OK && ret != RCL_RET_SUBSCRIPTION_TAKE_FAILED) {
     PyErr_Format(PyExc_RuntimeError,
       "Failed to take from a subscription: %s", rcl_get_error_string_safe());
     rcl_reset_error();
-    destroy_ros_message(taken_msg);
+    destroy_ros_message(msg);
+    Py_DECREF(pymetaclass);
     return NULL;
   }
 
   if (ret != RCL_RET_SUBSCRIPTION_TAKE_FAILED) {
-    PyObject * pyconvert_to_py = PyObject_GetAttrString(pymsg_type, "_CONVERT_TO_PY");
-
-    typedef PyObject *(* convert_to_py_signature)(void *);
-    convert_to_py_signature convert_to_py =
-      (convert_to_py_signature)PyCapsule_GetPointer(pyconvert_to_py, NULL);
+    convert_to_py_signature * convert_to_py = get_convert_to_py(pymetaclass);
+    Py_DECREF(pymetaclass);
 
-    PyObject * pytaken_msg = convert_to_py(taken_msg);
-    destroy_ros_message(taken_msg);
+    PyObject * pytaken_msg = convert_to_py(msg);
+    destroy_ros_message(msg);
     if (!pytaken_msg) {
       // the function has set the Python error
       return NULL;
@@ -2086,7 +2136,10 @@ rclpy_take(PyObject * Py_UNUSED(self), PyObject * args)
 
     return pytaken_msg;
   }
+
   // if take failed, just do nothing
+  Py_DECREF(pymetaclass);
+  destroy_ros_message(msg);
   Py_RETURN_NONE;
 }
 
@@ -2118,30 +2170,21 @@ rclpy_take_request(PyObject * Py_UNUSED(self), PyObject * args)
 
   PyObject * pymetaclass = PyObject_GetAttrString(pyrequest_type, "__class__");
 
-  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
-
-  typedef void *(* convert_from_py_signature)(PyObject *);
-  convert_from_py_signature convert_from_py =
-    (convert_from_py_signature)PyCapsule_GetPointer(pyconvert_from_py, NULL);
-  assert(convert_from_py != NULL &&
-    "unable to retrieve convert_from_py function, type_support mustn't have been imported");
-
-  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
-
-  typedef void * (* destroy_ros_message_signature)(void *);
-  destroy_ros_message_signature destroy_ros_message =
-    (destroy_ros_message_signature)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
+  create_ros_message_signature * create_ros_message = get_create_ros_message(pymetaclass);
+  assert(create_ros_message != NULL &&
+    "unable to retrieve create_ros_message function, type_support mustn't have been imported");
 
+  destroy_ros_message_signature * destroy_ros_message = get_destroy_ros_message(pymetaclass);
   assert(destroy_ros_message != NULL &&
     "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
 
-  PyObject * pysrv = PyObject_CallObject(pyrequest_type, NULL);
+  void * taken_request = create_ros_message();
 
-  void * taken_request = convert_from_py(pysrv);
   if (!taken_request) {
-    // the function has set the Python error
-    return NULL;
+    Py_DECREF(pymetaclass);
+    return PyErr_NoMemory();
   }
+
   rmw_request_id_t * header = (rmw_request_id_t *)PyMem_Malloc(sizeof(rmw_request_id_t));
   rcl_ret_t ret = rcl_take_request(service, header, taken_request);
 
@@ -2151,15 +2194,13 @@ rclpy_take_request(PyObject * Py_UNUSED(self), PyObject * args)
     rcl_reset_error();
     destroy_ros_message(taken_request);
     PyMem_Free(header);
+    Py_DECREF(pymetaclass);
     return NULL;
   }
 
   if (ret != RCL_RET_SERVICE_TAKE_FAILED) {
-    PyObject * pyconvert_to_py = PyObject_GetAttrString(pyrequest_type, "_CONVERT_TO_PY");
-
-    typedef PyObject *(* convert_to_py_signature)(void *);
-    convert_to_py_signature convert_to_py =
-      (convert_to_py_signature)PyCapsule_GetPointer(pyconvert_to_py, NULL);
+    convert_to_py_signature* convert_to_py = get_convert_to_py(pymetaclass);
+    Py_DECREF(pymetaclass);
 
     PyObject * pytaken_request = convert_to_py(taken_request);
     destroy_ros_message(taken_request);
@@ -2177,6 +2218,8 @@ rclpy_take_request(PyObject * Py_UNUSED(self), PyObject * args)
   }
   // if take_request failed, just do nothing
   PyMem_Free(header);
+  destroy_ros_message(taken_request);
+  Py_DECREF(pymetaclass);
   Py_RETURN_NONE;
 }
 
@@ -2206,41 +2249,29 @@ rclpy_take_response(PyObject * Py_UNUSED(self), PyObject * args)
 
   PyObject * pymetaclass = PyObject_GetAttrString(pyresponse_type, "__class__");
 
-  PyObject * pyconvert_from_py = PyObject_GetAttrString(pymetaclass, "_CONVERT_FROM_PY");
-
-  typedef void *(* convert_from_py_signature)(PyObject *);
-  convert_from_py_signature convert_from_py =
-    (convert_from_py_signature)PyCapsule_GetPointer(pyconvert_from_py, NULL);
-
-  PyObject * pydestroy_ros_message = PyObject_GetAttrString(pymetaclass, "_DESTROY_ROS_MESSAGE");
-
-  typedef void * (* destroy_ros_message_signature)(void *);
-  destroy_ros_message_signature destroy_ros_message =
-    (destroy_ros_message_signature)PyCapsule_GetPointer(pydestroy_ros_message, NULL);
+  create_ros_message_signature * create_ros_message = get_create_ros_message(pymetaclass);
+  assert(create_ros_message != NULL &&
+    "unable to retrieve create_ros_message function, type_support mustn't have been imported");
 
+  destroy_ros_message_signature * destroy_ros_message = get_destroy_ros_message(pymetaclass);
   assert(destroy_ros_message != NULL &&
     "unable to retrieve destroy_ros_message function, type_support mustn't have been imported");
 
-  PyObject * pysrv = PyObject_CallObject(pyresponse_type, NULL);
-
-  assert(convert_from_py != NULL);
-  assert(pysrv != NULL);
-  void * taken_response = convert_from_py(pysrv);
+  void * taken_response = create_ros_message();
   if (!taken_response) {
     // the function has set the Python error
-    return NULL;
+     Py_DECREF(pymetaclass);
+     return NULL;
   }
+
   rmw_request_id_t * header = (rmw_request_id_t *)PyMem_Malloc(sizeof(rmw_request_id_t));
   header->sequence_number = sequence_number;
   rcl_ret_t ret = rcl_take_response(client, header, taken_response);
   PyMem_Free(header);
 
   if (ret != RCL_RET_CLIENT_TAKE_FAILED) {
-    PyObject * pyconvert_to_py = PyObject_GetAttrString(pyresponse_type, "_CONVERT_TO_PY");
-
-    typedef PyObject *(* convert_to_py_signature)(void *);
-    convert_to_py_signature convert_to_py =
-      (convert_to_py_signature)PyCapsule_GetPointer(pyconvert_to_py, NULL);
+    convert_to_py_signature * convert_to_py = get_convert_to_py(pymetaclass);
+    Py_DECREF(pymetaclass);
 
     PyObject * pytaken_response = convert_to_py(taken_response);
     destroy_ros_message(taken_response);
@@ -2251,7 +2282,10 @@ rclpy_take_response(PyObject * Py_UNUSED(self), PyObject * args)
 
     return pytaken_response;
   }
+
   // if take_response failed, just do nothing
+  destroy_ros_message(taken_response);
+  Py_DECREF(pymetaclass);
   Py_RETURN_NONE;
 }
 
